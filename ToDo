1. Создать новый аккаунт в Robokassa
      Зарегистрируйтесь на Robokassa.
      Подтвердите свой аккаунт через необходимые шаги.


2. Настроить параметры Robokassa

      Result URL: Установите URL результата на контроллер finish_order в app.py.
      Пример: https://yourdomain.com/finish_order

      Success URL: Установите URL успеха на контроллер success в app.py.
      Пример: https://yourdomain.com/success

      Password 1: Установите значение Password 1 в технических настройках.

      Добавьте этот пароль в файл config.py как PASSWORD_ROBOKASSA.
      Login: Обратите внимание на значение Login в технических настройках.

      Добавьте этот логин в файл config.py как LOGIN_ROBOKASSA.

3.
      Определить для магазина SHOP_ID в config.py
      это число, кратное миллиону, для каждого магазина это отдельный миллион,
      который необходим для того, чтобы не возникало апересечений в invoice id

      То есть, для каждого магазина отведено миллион invId (покупок)

      **Именно так сделано, для того чтобы не оздавать отдельный сервер для бд всех invId

4. Настройка контроллеров
      /start_order/products/user_id: Передайте список продуктов (список словарей)
      и user_id в контроллер


Заметки:

Контроллер Result URL (/finish_order/):
Получает результат оплаты от Robokassa.
Парсит данные из request.form и проверяет подпись платежа.

Контроллер Success URL (/success):
Отображает страницу успеха при успешной оплате.

Обработка данных о продуктах:

Убедитесь, что products передается как URL-кодированная строка JSON в маршрут /start_order/products/user_id.
Контроллер start_order декодирует и парсит эту строку JSON в список словарей на Python.
Запуск приложения Flask:

Приложение прослушивает порт 8000. При надобности можно заменить

ВАЖНО: ссылка на бэкэнд лежит в app.py, её тоже нужно заменить (REQ_URL)